services:
  # Servicio de la Base de Datos (PostgreSQL)
  db:
    image: postgres:15-alpine
    container_name: compassart-db
    restart: always
    environment:
      POSTGRES_DB: compassart_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: ${DB_PASSWORD} # <-- Usar una variable de entorno aquÃ­
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d compassart_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - "127.0.0.1:5438:5432"
    networks:
      - compassart-net

  backend:
    container_name: compassart-backend
    build: ./backend
    restart: always
    # Expone el puerto del backend al localhost del VPS
    ports:
      - "127.0.0.1:3017:3017" # Host_IP:Host_Port:Container_Port
    env_file:
      - backend/.env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - compassart-net

  # Servicio del Frontend (Astro)
  frontend:
    container_name: compassart-frontend
    build:
      context: ./frontend
      args:
        VITE_PUBLIC_INTERNAL_API_URL: http://backend:3017
        HOST: 0.0.0.0
        PORT: 4317
        VITE_PUBLIC_API_URL: ${VITE_PUBLIC_API_URL}
    restart: always
    # Expone el puerto del frontend al localhost del VPS
    ports:
      - "127.0.0.1:4317:4317"
    # Host_IP:Host_Port:Container_Port
    environment:
      PORT: 4317
      HOST: 0.0.0.0
      VITE_PUBLIC_INTERNAL_API_URL: http://backend:3017
      NODE_OPTIONS: --dns-result-order=ipv4first
      VITE_PUBLIC_API_URL: ${VITE_PUBLIC_API_URL}
    env_file:
      - frontend/.env
    depends_on:
      - backend
    networks:
      - compassart-net

volumes:
  db-data:

networks:
  compassart-net:
    driver: bridge
